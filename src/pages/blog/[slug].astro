---
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { getProcessedArticles } from '../../scripts/articles';

export const getStaticPaths = async () => {
    const { allArticles } = await getProcessedArticles();
    const paths = allArticles.map(article => {
        return {
            params: {
                slug: article.slug
            },
            props: {
                article
            }
        }
    })

    return paths;
}

interface Props {
    article: CollectionEntry<'articles'>
}

const {article } = Astro.props
const {Content} = await article.render()
---

<Layout title={article.data.title}>
	{/* Article Header */}
	<div class="max-w-4xl mx-auto px-4 py-12">
		<header class="mb-12">
			<h1 class="text-4xl md:text-5xl font-bold text-white mb-1 leading-tight">
				{article.data.title}
			</h1>
			<p class="text-text-highlight text-base leading-relaxed mb-6">{article.data.hook}</p>
			
			{/* Article metadata */}
			<div class="flex items-center gap-4 text-slate-400 text-sm">
				<time class="flex items-center gap-2">
					<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.414-1.414L11 9.586V6z" clip-rule="evenodd"></path>
					</svg>
					{article.data.date ? new Date(article.data.date).toLocaleDateString('en-US', { 
						year: 'numeric', 
						month: 'long', 
						day: 'numeric' 
					}) : 'Recently'}
				</time>
				<span class="text-slate-500">â€¢</span>
				<span>5 min read</span>
			</div>
		</header>

		{/* Article Content */}
		<article class="prose prose-lg prose-invert max-w-none">
			<div class="text-slate-300 leading-relaxed">
				<Content /> 
			</div>
		</article>
	</div>
</Layout>
