---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import H1 from "../../components/H1.astro";
import Main from "../../components/Main.astro";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";

export const getStaticPaths = async () => {
    const allArticles = await getCollection('articles');
    const paths = allArticles.map(article => {
        return {
            params: {
                slug: article.slug
            },
            props: {
                article
            }
        }
    })

    return paths;
}

interface Props {
    article: CollectionEntry<'articles'>
}

const {article } = Astro.props
const {Content} = await article.render()
---

<Layout title={article.data.title}>
	<Main>
		<!-- Article Header -->
		<div class="max-w-4xl mx-auto px-4 py-12">
			<header class="mb-12">
				<h1 class="text-4xl md:text-5xl font-bold text-white mb-6 leading-tight">
					{article.data.title}
				</h1>
				
				<!-- Article metadata -->
				<div class="flex items-center gap-4 text-slate-400 text-sm">
					<time class="flex items-center gap-2">
						<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.414-1.414L11 9.586V6z" clip-rule="evenodd"></path>
						</svg>
						{article.data.date ? new Date(article.data.date).toLocaleDateString('en-US', { 
							year: 'numeric', 
							month: 'long', 
							day: 'numeric' 
						}) : 'Recently'}
					</time>
					<span class="text-slate-500">â€¢</span>
					<span>5 min read</span>
				</div>
			</header>

			<!-- Article Content -->
			<article class="prose prose-lg prose-invert max-w-none">
				<div class="text-slate-300 leading-relaxed">
					<Content /> 
				</div>
			</article>
		</div>
    </Main>
</Layout>

<style>
	/* Custom prose styles for better readability */
	.prose {
		--tw-prose-body: #cbd5e1;
		--tw-prose-headings: #f8fafc;
		--tw-prose-lead: #94a3b8;
		--tw-prose-links: #06b6d4;
		--tw-prose-bold: #f8fafc;
		--tw-prose-counters: #94a3b8;
		--tw-prose-bullets: #475569;
		--tw-prose-hr: #334155;
		--tw-prose-quotes: #94a3b8;
		--tw-prose-quote-borders: #334155;
		--tw-prose-captions: #94a3b8;
		--tw-prose-code: #f8fafc;
		--tw-prose-pre-code: #cbd5e1;
		--tw-prose-pre-bg: #1e293b;
		--tw-prose-th-borders: #334155;
		--tw-prose-td-borders: #1e293b;
	}

	.prose h1,
	.prose h2,
	.prose h3,
	.prose h4,
	.prose h5,
	.prose h6 {
		color: #f8fafc;
		font-weight: 600;
		line-height: 1.3;
		margin-top: 2rem;
		margin-bottom: 1rem;
	}

	.prose h2 {
		font-size: 1.875rem;
		margin-top: 3rem;
	}

	.prose h3 {
		font-size: 1.5rem;
		margin-top: 2.5rem;
	}

	.prose p {
		color: #cbd5e1;
		line-height: 1.75;
		margin-bottom: 1.5rem;
		font-size: 1.125rem;
	}

	.prose a {
		color: #06b6d4;
		text-decoration: underline;
		text-underline-offset: 3px;
		transition: color 0.2s ease;
	}

	.prose a:hover {
		color: #67e8f9;
	}

	.prose blockquote {
		border-left: 4px solid #06b6d4;
		padding-left: 1.5rem;
		margin: 2rem 0;
		font-style: italic;
		color: #94a3b8;
	}

	.prose ul,
	.prose ol {
		margin: 1.5rem 0;
	}

	.prose li {
		margin: 0.5rem 0;
		color: #cbd5e1;
	}

	.prose code {
		background-color: #1e293b;
		padding: 0.25rem 0.5rem;
		border-radius: 0.375rem;
		color: #f8fafc;
		font-size: 0.875rem;
	}

	.prose pre {
		background-color: #1e293b;
		padding: 1.5rem;
		border-radius: 0.75rem;
		overflow-x: auto;
		margin: 2rem 0;
	}

	.prose pre code {
		background-color: transparent;
		padding: 0;
	}
</style>